version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: sg_farmers_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Registration API
  registration-api:
    build:
      context: ./services/registration-api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/sg_farmers_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    volumes:
      - ./services/registration-api:/app
      - /app/node_modules

  # Search API
  search-api:
    build:
      context: ./services/search-api
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/sg_farmers_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    volumes:
      - ./services/search-api:/app
      - /app/node_modules

  # Chat API
  chat-api:
    build:
      context: ./services/chat-api
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/sg_farmers_db
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: your-openai-api-key
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    volumes:
      - ./services/chat-api:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    ports:
      - "3003:80"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_SEARCH_API_URL: http://localhost:3001
      REACT_APP_CHAT_API_URL: http://localhost:3002
    depends_on:
      - registration-api
      - search-api
      - chat-api
    networks:
      - app-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - registration-api
      - search-api
      - chat-api
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge